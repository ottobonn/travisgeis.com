{
    "componentChunkName": "component---src-pages-post-slug-tsx",
    "path": "/2011/03/01/some-sumobot-stuff/",
    "result": {"data":{"post":{"slug":"2011/03/01/some-sumobot-stuff","title":"Some SumoBot Stuff","date":"1 March 2011","parent":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Some SumoBot Stuff\",\n  \"url\": \"152.html\",\n  \"id\": 152,\n  \"categories\": [\"Arduino\", \"Electronics\", \"Robotics\"],\n  \"date\": \"2011-03-01T08:39:57.000Z\",\n  \"tags\": null\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I belong to LVL1 Hackerspace in Louisville. We have a SumoBot team competing in\\na Hive13 competition coming up, in\\xA0Cincinnati. Searching for wheels for a\\nMini-class bot, I happened across the 1.25\\u201D rubber-tired wheels from Solarbotics\\n(the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.solarbotics.com/products/rw2i/\",\n    \"title\": \"Solarbotics RW2\"\n  }, \"RW2\"), \"s). I\\nlike the small diameter and grippy material, but I have their GM8 gearmotors\\nwith double-flat axles. To work both into my design, I decided I would make a 3D\\nmodel for a rim that would both fit in those tires and work with the GM8-style\\noutput shaft.\"), mdx(\"p\", null, \"After four iterations, the plastic wheel does what I want. It\\u2019s intended for\\nprinting on a MakerBot or similar plastic-enabled printer, specifically in ABS.\\nI tried PLA and the close tolerances were a bit off, but I\\u2019m sure a bit of\\nvariable-tweaking would fix that. I printed mine in black ABS, and they fit the\\nGM8s just right. I hope these rims are useful to other makers, and I\\u2019ve uploaded\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.thingiverse.com/thing:6748\",\n    \"title\": \"The wheels on Thingiverse\"\n  }, \"the designs\"), \"\\nto Thingiverse. See after the break for details.\"), mdx(\"p\", null, \"The wheel had several design requirements:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Fit on the GM-style double-flat axle tab\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Fit in the RW2 tires from Solarbotics\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Be printable on the MakerBot\")), mdx(\"p\", null, \"I designed the wheel in OpenSCAD and compiled and printed it with ReplicatorG.\"), mdx(\"p\", null, \"Measuring the tab came first. It\\u2019s 7mm in diameter and 5mm wide between flats,\\nwith a 7mm diameter of curvature on the rounded ends. I made a cylinder of the\\nsame curvature and intersected a rectangular prism of 5mm width with it.\"), mdx(\"p\", null, \"The original wheels are cylinders with three ridges, one on each end and one in\\nthe center. The center ridge is 2mm high by 1mm wide, and the outside ones are\\n1mm by 1mm. The diameter of the rim without ridges is 17mm, and the wheel width\\nis 13.2mm. A 2mm-tall center ridge doesn\\u2019t print well on the MakerBot, so I\\ncompromised and made the ridge 1.75mm.\"), mdx(\"p\", null, \"The outboard side of the wheel has a conic inset, a shape the MakerBot can print\\nunder the rest of the wheel. The wheel has a screw hole 2mm in diameter for the\\nGM screws, though it fits quite snugly on its own. =\"), mdx(\"p\", null, \"A flag in the OpenSCAD file disables the tab inset so you can print freewheeling\\nrims as well.\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.thingiverse.com/thing:6748\",\n    \"title\": \"The wheels on Thingiverse\"\n  }, \"the thing on Thingiverse\"), \"\\nand \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.solarbotics.com/products/rw2i/\",\n    \"title\": \"The RW2 wheels on Solarbotics\"\n  }, \"the originals on Solarbotics\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":1}}},"pageContext":{"id":"2ade704d-8fae-55c2-986e-6fc3400dc691","slug":"2011/03/01/some-sumobot-stuff","__params":{"slug":"2011"}}},
    "staticQueryHashes": []}