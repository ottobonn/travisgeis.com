{
    "componentChunkName": "component---src-pages-post-slug-tsx",
    "path": "/2011/06/16/beecnc-motherboard-v1/",
    "result": {"data":{"post":{"slug":"2011/06/16/beecnc-motherboard-v1","title":"BeeCNC Motherboard v1","date":"16 June 2011","parent":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"BeeCNC Motherboard v1\",\n  \"url\": \"305.html\",\n  \"id\": 305,\n  \"categories\": [\"BeeCNC\"],\n  \"date\": \"2011-06-16T00:07:37.000Z\",\n  \"tags\": null\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I\\u2019m still working on the BeeCNC. Yesterday I laid out a PCB in gEDA PCB and\\netched it with Ferric Chloride. It\\u2019s based on the Arduino designs, uses a 28-DIP\\nATmega chip, and employs three Sparkfun/Schmalzhaus EasyDriver stepper driver\\nchips.\"), mdx(\"p\", null, \"Today I worked awhile to burn the bootloader onto the chip, but I ran into some\\ntrouble. I am using ladyada\\u2019s USBtinyISP for programming with avrdude as the\\nsoftware.\"), mdx(\"p\", null, \"I plugged the USBtinyISP into the header, applied 5V regulated power to  the\\ncircuit (no power jumper in place on the USBtinyISP) and ran:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"sudo su\\nroot@travis-macbook:/home/travis# avrdude -p m168 -c usbtiny\"), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"The output at first seems okay:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"avrdude: AVR device initialized and ready to accept instructions\\n\\nReading | ################################################## | 100% 0.01s\\n\\navrdude: Device signature = 0x1e9406\\n\\navrdude: safemode: Fuses OK\\n\\navrdude done.\\xA0 Thank you.\"), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"After that output, without touching the circuit, I run the same command again:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"root@travis-macbook:/home/travis# avrdude -p m168 -c usbtiny\"), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"The output is unexpected:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"avrdude: initialization failed, rc=-1\\n Double check connections and try again, or use -F to override\\n this check.\\n\\navrdude done.\\xA0 Thank you.\"), mdx(\"span\", {\n    parentName: \"pre\",\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"I don\\u2019t understand why the ISP works fine the first time and then  doesn\\u2019t work\\nimmediately afterwards. Restarting the computer allows avrdude to work again,\\nbut only once (then another restart, etc).\"), mdx(\"p\", null, \"I\\u2019ve posted the problem\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://forums.adafruit.com/viewtopic.php?f=20&t=21605\",\n    \"title\": \"USBtinyISP on Ubuntu: Works once, then initialization fails\"\n  }, \"in the adafruit forums\"), \",\\nand will update with progress.\"), mdx(\"p\", null, \"UPDATE: The problem was\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/2011/06/19/beecnc-back-on-track/\",\n    \"title\": \"BeeCNC Back on Track!\"\n  }, \"a short\"), \"\\nto one of the oscillator pins.\"));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":1}}},"pageContext":{"id":"22f03d46-a8ad-580a-9ed0-677e832c8993","slug":"2011/06/16/beecnc-motherboard-v1","__params":{"slug":"2011"}}},
    "staticQueryHashes": []}