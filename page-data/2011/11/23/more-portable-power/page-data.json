{
    "componentChunkName": "component---src-pages-post-slug-tsx",
    "path": "/2011/11/23/more-portable-power/",
    "result": {"data":{"post":{"slug":"2011/11/23/more-portable-power","title":"More Portable Power","date":"23 November 2011","parent":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"More Portable Power\",\n  \"url\": \"370.html\",\n  \"id\": 370,\n  \"categories\": [\"Electronics\"],\n  \"date\": \"2011-11-23T00:00:07.000Z\",\n  \"tags\": null\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I\\u2019m working right now on a more portable ATX power supply, hopefully one that\\ncan survive a rough plane ride in the cargo hold without any special attention.\\nI\\u2019d like to inset the terminals and switch, to keep them out of harm\\u2019s way and\\nto allow me to stack stuff on the supply.\"), mdx(\"p\", null, \"I think while I\\u2019m at it I will add a LM317 variable regulator and an Adafruit\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.adafruit.com/products/575\",\n    \"title\": \"Adafruit\"\n  }, \"Panel Volt Meter\"), \" to keep an\\neye on the voltage of the regulator. I could even add a current-sensing\\nresistor, though I probably won\\u2019t need it.\"), mdx(\"p\", null, \"I started off intending to roll my own supply, but it turns out they don\\u2019t get\\nmuch smaller than the ATXs for what those do. I like having all the separate\\npower lines, and the overcurrent protection is priceless.\"));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":1}}},"pageContext":{"id":"0095d959-f536-506c-8c4a-5d6d28569bab","slug":"2011/11/23/more-portable-power","__params":{"slug":"2011"}}},
    "staticQueryHashes": []}