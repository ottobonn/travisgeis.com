{
    "componentChunkName": "component---src-pages-post-slug-tsx",
    "path": "/2013/09/07/a-response-to-the-final-upgrade-popsci-october-2013/",
    "result": {"data":{"post":{"slug":"2013/09/07/a-response-to-the-final-upgrade-popsci-october-2013","title":"A Response to \"The Final Upgrade\" (PopSci October 2013)","date":"7 September 2013","parent":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"A Response to \\\"The Final Upgrade\\\" (PopSci October 2013)\",\n  \"tags\": [\"future\", \"nsa\", \"privacy\"],\n  \"url\": \"605.html\",\n  \"id\": 605,\n  \"categories\": [\"Computing\"],\n  \"date\": \"2013-09-07T19:22:03.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I just read the short column in this month\\u2019s Popular Science about \\u201CThe Final\\nUpgrade,\\u201D supposedly our way out of phone and PC upgrades by way of smarter\\nsoftware. What I thought was going to be an insightful look into new\\nload-minimizing techniques or ultra-efficient consumer software instead quickly\\ndegenerated into the trite \\u201Cthe cloud will save us all\\u201D argument.\"), mdx(\"p\", null, \"Ioizzio argues that the end of hardware upgrades is upon us, because obviously\\nwe are offloading more and more processing demands onto the cloud. She made the\\ncomparison to 80s mainframes for me: modern hardware will be \\u201Cthin client\\nterminals\\u201D for use to log into some corporate mainframe. We will stream video\\ngames (remember the hype for OnLive?), use cloud document editors, etc. But\\nfurther, we will log in via some VNC-style remote desktop to a complete\\ncomputer-that-doesn\\u2019t-belong-to-us. If that\\u2019s the future, count me out.\"), mdx(\"p\", null, \"First, the technical problems are not fixed. Americans severely lack the\\nbandwidth necessary to stream videos satisfactorily, let alone send video game\\ninputs up and bring graphics back down with sufficiently low latency to make a\\ngame feel good. It just isn\\u2019t the same as having a local powerhouse to serve\\nthose graphics over a single meter of copper.\\xA0But let\\u2019s assume, for the sake of\\nargument, that we\\u2019re talking about some awesome fiber-to-the-home future, which\\nseems imminent. We have tons of bandwidth, and we can stream and upload without\\nhassle.\"), mdx(\"p\", null, \"The main problem I have with Iozzio\\u2019s argument is that it is precisely a\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.gnu.org/philosophy/who-does-that-server-really-serve.html\"\n  }, \"service as a software substitute\"), \"\\n(SaaSS).\\nAnd, as the GNU foundation so thoroughly lays out, SaaSS erodes user\\nfreedom. The cloud-VNC future of non-hardware that Iozzio describes is one step\\nbeyond the current use of cloud storage and documents. It is a whole operating\\nsystem on someone else\\u2019s computer! As legal teams around the world have already\\nlearned, users have no reasonable expectation of privacy when they use someone\\nelse\\u2019s computer. This astonishingly overlooked point means that, in the future\\nthe author envisions, users will never have an expectation of privacy. Ever.\\nPeriod.\"), mdx(\"p\", null, \"With our clearer knowledge of the espionage activities of the government, and\\neven with our old-fashioned common sense, this vision of the future is\\nunreasonable. It is unacceptable and irresponsible to make a technological\\nprediction without considering legal and social implications.\"), mdx(\"p\", null, \"So instead of this cloud-VNC nightmare, we should be hosting our own clouds, or\\nkeeping our data locally on our devices, and using better software that works on\\nolder hardware. Users must own the means of computation, or we\\u2019ll be right back\\nwhere we started, with corporate-mandated policies on what is acceptable for\\npeople to do on their computers. Further, we\\u2019ll be begging the NSA to to take a\\nclose look at our whole computing stack, taking whatever they please. Let\\u2019s not\\ngo backward after so much progress towards user empowerment.\"));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":2}}},"pageContext":{"id":"b081e004-2fc7-5120-862f-69cbb697fcdb","slug":"2013/09/07/a-response-to-the-final-upgrade-popsci-october-2013","__params":{"slug":"2013"}}},
    "staticQueryHashes": []}