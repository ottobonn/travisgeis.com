{
    "componentChunkName": "component---src-pages-post-slug-tsx",
    "path": "/2016/08/15/fixing-nvidia-backlight-in-2016-linux-4-4-with-nvidia-361/",
    "result": {"data":{"post":{"slug":"2016/08/15/fixing-nvidia-backlight-in-2016-linux-4-4-with-nvidia-361","title":"Fixing nvidia Backlight in 2016: Linux 4.4 with nvidia-361","date":"15 August 2016","parent":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Fixing nvidia Backlight in 2016: Linux 4.4 with nvidia-361\",\n  \"url\": \"651.html\",\n  \"id\": 651,\n  \"categories\": [\"Uncategorized\"],\n  \"date\": \"2016-08-15T04:38:30.000Z\",\n  \"project\": \"Linux Quirks\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"It seems we have reached a new epoch in the Linux backlight stuggle: today, I\\nupgraded my T420 to Linux Mint 18, and the backlight again stopped working (as\\nexpected). I did the usual, which is to add \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"\\\"video.use_native_backlight=1\\\"\"), \" to my\\nGRUB boot options.\"), mdx(\"p\", null, \"To my dismay, the backlight controls still didn\\u2019t work. After trying various\\ndrivers, all of the possible ACPI kernel command-line options, and various\\ncommands to set the backlight brightness directly from the terminal, it occurred\\nto me that nvidia has been working on Linux support for Optimus, and their new\\ndrivers include that support.\"), mdx(\"p\", null, \"As a last resort, I re-enabled Optimus in my T420 BIOS settings, and removed all\\nof my modifications to the stock Linux Mint 18 grub file. To my great surprise\\nand immense relief, the system Just Works. I\\u2019m happy to say that it goes to\\nsleep, wakes up, and adjusts backlight brightness with no issues.\"), mdx(\"p\", null, \"At last, after a solid five years of workarounds, my T420 shines as brightly as\\nI want it to shine. Thanks to nvidia for all the vast improvements to their\\nLinux driver, and to all the members of the Linux community who researched and\\nshared their ideas for fixing backlight problems.\"));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":1}}},"pageContext":{"id":"22dec542-6fcd-5563-a9d6-b8d5caadf20f","slug":"2016/08/15/fixing-nvidia-backlight-in-2016-linux-4-4-with-nvidia-361","__params":{"slug":"2016"}}},
    "staticQueryHashes": []}