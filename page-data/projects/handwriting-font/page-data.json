{
    "componentChunkName": "component---src-pages-project-slug-tsx",
    "path": "/projects/handwriting-font/",
    "result": {"data":{"project":{"id":"Handwriting Font","name":"Handwriting Font","fields":{"posts":[{"id":"155d96c1-cba2-5da9-a407-54793e98f121","slug":"2020/08/25/handwriting-font","title":"Making a Handwriting Font with Calligraphr and FontForge","lede":"I finally caved in and tried my hand at making a font.","date":"25 August 2020","rawDate":"2020-08-25T00:00:00.000Z","path":"/2020/08/25/handwriting-font/","parent":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Making a Handwriting Font with Calligraphr and FontForge\",\n  \"date\": \"2020-08-25T19:53:53.000Z\",\n  \"tags\": null,\n  \"lede\": \"I finally caved in and tried my hand at making a font.\",\n  \"project\": \"Handwriting Font\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(TravisPrintOne, {\n    mdxType: \"TravisPrintOne\"\n  }), mdx(\"style\", null, \"\\n  .handwritten, #titles h1 {\\n    font-family: 'Travis Print One' !important;\\n    line-height: 1.5;\\n  }\"), mdx(\"div\", {\n    className: \"handwritten\"\n  }, \"I have been reading about font design and evolving font technologies for a while, and I finally succumbed to the lure of making a font. I decided for this first foray to try to replicate my handwriting. This is the result!\", mdx(\"div\", {\n    className: \"video-container\"\n  }, mdx(\"iframe\", {\n    src: \"https://www.youtube-nocookie.com/embed/8a5-U7edcjU\",\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true\n  })), mdx(\"p\", null, \"  In this video I walk through the process, from using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://calligraphr.com\"\n  }, \"Calligraphr\"), \" to capture the glyphs to using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://fontforge.org\"\n  }, \"FontForge\"), \" to fine-tune the spacing.\"), mdx(\"p\", null, \"  I took the time to write out the common characters multiple times, so there are plenty of variations of each one (called \\u201Ccontextual alternatives\\u201D in font lingo). I also added some extra punctuation, math symbols, and common European language characters.\"), mdx(\"br\", null), mdx(\"p\", null, \"  Here are some fancy character examples:\"), mdx(\"p\", null, \"  \\u201CThis is a quoted phrase.\\u201D\"), mdx(\"b\", null, \"Here's some code:\"), mdx(\"pre\", {\n    className: \"handwritten\"\n  }, \"\\nlet x = 0;\\nif (x < 10) {\\n  // do something\\n}\"), mdx(\"p\", null, \"  And how about some nonsensical math:\"), mdx(\"p\", null, \"  \\u03B4\\u03C7/\\u03B4t = 10;\\n\\u2200a\\u2208A, \\u2203x s.t. \\u2026\")));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":1}}]}}},"pageContext":{"id":"Handwriting Font","slug":"/projects/handwriting-font","__params":{"slug":"projects"}}},
    "staticQueryHashes": []}